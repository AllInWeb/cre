<?php
/**
 * Меню личных кабинетов
 * @return array
 */
function awards_menu()
{
    $items = array();
    $items['user/juri'] = array(
        'title'           => 'Личный кабинет жюри',
        'page callback'   => 'awards_juri_page_callback',
        'access callback' => true,
        'menu_name'       => 'main-menu',
    );
    $items['user/retailer'] = array(
        'title'           => 'Личный кабинет ритейлера',
        'page callback'   => 'awards_retailer_page_callback',
        'access callback' => true,
        'menu_name'       => 'main-menu',
    );

    return $items;
}

/**
 * Страница котурую увидит пользователя перейдя по ссылке 'Личный кабинет жюри'
 * @return string
 */
function awards_juri_page_callback()
{
    global $user;
    if ($user->uid) {
        if (isset($user->roles[4])) {

            return theme('retailer_page');
        } else if (user_access('administer')) {
            drupal_goto('<front>');
        } else {
            drupal_goto('user/retailer');
        }
    } else {
        return registerPageRender();
    }
}

/**
 * Страница котурую увидит пользователя перейдя по ссылке 'Личный кабинет ритейлера'
 * @return string
 */
function awards_retailer_page_callback()
{
    global $user;
    if ($user->uid) {
        if (isset($user->roles[5])) {
            $user = user_load($user->uid);
            module_load_include('inc', 'user', 'user.pages');
            $form_edit = drupal_get_form('user_profile_form', $user);

            return theme('retailer_page', array('form_edit' => $form_edit));
        } else if (user_access('administer')) {
            drupal_goto('<front>');
        } else {
            drupal_goto('user/juri');
        }
    } else {
       return registerPageRender();
    }
}

/**
 * Переопределение темы форм регистрации
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 * @return array
 */
function awards_theme($existing, $type, $theme, $path)
{
    return array(
        'retailer_page' => array(
            'render element' => 'elements',
            'template'       => 'retailer-register-page',
        )
    );
}

/**
 * Вывод форм и показ полей в зависимости от типа пользователя
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function awards_form_alter(&$form, &$form_state, $form_id)
{
    if ('user_register_form' == $form_id) {
        if (isset($_GET['q'])) {
            if ($_GET['q'] == 'user/retailer') {
                $form['account']['roles'][5] = array('#type' => 'checkbox', '#title' => 'Ритейлер', '#default_value' => true, '#disabled' => true);
                $form['field_log_url']['und'][0]['value']['#default_value']   = $GLOBALS['base_url'] . '/user/retailer';
                $form['field_token_com']['und'][0]['value']['#default_value'] = 'название сети';
                retailerRules($form);
            } else if ($_GET['q'] == 'user/juri') {
                $form['account']['roles'][4] = array('#type' => 'checkbox', '#title' => 'Жюри', '#default_value' => true, '#disabled' => true);
                $form['field_log_url']['und'][0]['value']['#default_value']   = $GLOBALS['base_url'] . '/user/juri';
                $form['field_token_com']['und'][0]['value']['#default_value'] = 'компания';
                juriRules($form);
            } else if ($_GET['q'] == 'admin/people/create') {
                $form['account']['status']['#access']        = false;
                $form['account']['roles']['#access']         = false;
                $form['account']['notify']['#access']        = false;
                $form['account']['name']['#default_value']   = 'user' . mt_rand(1, 10000) . 'CRE' . mt_rand(1, 800);
                $form['account']['notify']['#default_value'] = 1;
                $form['account']['roles']['#default_value']  = array(4);
                $form['account']['pass'] = array(
                    '#type'        => 'password',
                    '#title'       => t('Пароль'),
                    '#description' => t('Пароль згенерирован, но вы можете назначить его вручную'),
                    '#attributes'  => array('value' => autoGeneratePassword()),
                );
                $form['field_token_com']['und'][0]['value']['#default_value'] = 'компания';
                $form['field_log_url']['und'][0]['value']['#default_value']   = $GLOBALS['base_url'] . '/user/juri';
                juriRules($form);
            }
        }
    } else if ('user_profile_form' == $form_id) {
        global $user;
        $form['account']['pass']['#access']         = false;
        $form['account']['mail']['#access']         = false;
        $form['account']['current_pass']['#access'] = false;
        if (isset($user->roles[5]) && $user->roles[5]) {
            if (isset($_GET['q'])) {
                if ($_GET['q'] !== 'user/retailer') {
                    drupal_goto('user/retailer');
                }
            }
            retailerRules($form);
        } else if (isset($user->roles[4])) {
            if (isset($_GET['q'])) {
                if ($_GET['q'] !== 'user/juri') {
                    juriRules($form);
                    switch ($_GET['q']) {
                        case 'node/25':
                            $form['field_user_shop1']['#access'] = true;
                            $form['field_user_shop2']['#access'] = true;
                            $form['field_user_shop3']['#access'] = true;
                            $form['field_user_shop4']['#access'] = true;
                            $form['field_user_shop5']['#access'] = true;
                            $fields = array('field_fio', 'field_user_ret1', 'field_user_ret2', 'field_user_ret3');
                            setFieldsAccessFalse($fields, $form);
                            disableJuriFields($form);
                            break;
                        case 'node/26':
                            $form['field_user_ret1']['#access'] = true;
                            $form['field_user_ret2']['#access'] = true;
                            $form['field_user_ret3']['#access'] = true;
                            $fields = array('field_fio', 'field_user_shop1', 'field_user_shop2', 'field_user_shop3', 'field_user_shop4', 'field_user_shop5');
                            setFieldsAccessFalse($fields, $form);
                            disableJuriFields($form);
                            break;
                        default:
                            disableVotingFields($form);
                            break;
                    }
                }
            }
        } else if (user_access('administer')) {
            if ($form['account']['roles']['#default_value'][1] == 4) {
                disableVotingFields($form);
                juriRules($form);
            } else if ($form['account']['roles']['#default_value'][1] == 5) {
                retailerRules($form);
            }
        }
    } else if ('views_form_send_news_page' == $form_id) {
        $send_fields = array('from', 'additional', 'views_send_direct', 'views_send_carbon_copy', 'views_send_remember', 'to');
        setFieldsAccessFalse($send_fields, $form);
        $form['mail']['token']['#access'] = false;
        $form['to']['views_send_to_mail']['#default_value'] = 'users_mail_pos_2';
    }
}

/**
 * Правила для полей форм для роли 'Жюри'
 * @param $form
 * @return mixed
 */
function juriRules(&$form)
{
    $fields = array('field_log_url', 'field_name', 'field_logotipe', 'field_short_decr', 'field_year_stand_network',
        'field_audience', 'field_shop_point_1_2014', 'field_shop_points_13_14', 'field_shop_points', 'field_profit_dynamic', 'field_field_name_en_',
        'field_field_short_decr_en_', 'field_field_audience_en_', 'field_field_shop_points_en_','field_token_com', 'field_voting2', 'field_voting1'
    );
    $required_fields = array('field_fio', 'field_job', 'field_company', 'field_fio_en', 'field_field_job_en_', 'field__company_en_', 'field_company');
    foreach ($required_fields as $key => $required_field) {
        $form[$required_field]['und'][0]['value']['#required'] = 1;
    }
    setFieldsAccessFalse($fields, $form);
    return $form;
}

/**
 * Правила для полей форм для роли 'Ритейлер'
 * @param $form
 * @return mixed
 */
function retailerRules(&$form)
{
    $form['field_fio']['und'][0]['value']['#required']  = 1;
    $form['field_name']['und'][0]['value']['#required'] = 1;
    disableJuriFields($form);
    disableVotingFields($form);

    return $form;
}

/**
 * Генерация пароля
 * @return string
 */
function autoGeneratePassword()
{
    $letters = array('A', 'B', 'c', 'g', 'zii', 'cr', 'V', 'I');
    $limit = count($letters) - 1;
    $placeholder = $letters[mt_rand(0, $limit)];

    return 'Rx' . mt_rand(1, 1000) . 'DBn' . mt_rand(1, 800) . '' . $placeholder;
}

/**
 * Отключение полей жюри на формах голосования
 * @param $form
 * @return mixed
 */
function disableJuriFields(&$form)
{
    $fields = array('field_log_url', 'field_photo', 'field_job', 'field_company', 'field_rireit', 'field_fio_en',
        'field_field_job_en_', 'field__company_en_', 'field_riteil_en_', 'field_token_com', 'field_voting2', 'field_voting1'
    );
    setFieldsAccessFalse($fields, $form);

    return $form;
}

/**
 * Отключение полей голосвания на формах редактирования профилей
 * @param $form
 * @return mixed
 */
function disableVotingFields(&$form)
{
    $fields = array('field_user_shop1', 'field_user_shop2', 'field_user_shop3', 'field_user_shop4',
        'field_user_shop5', 'field_user_ret1', 'field_user_ret2', 'field_user_ret3'
    );
    setFieldsAccessFalse($fields, $form);

    return $form;
}

/**
 * Скрывание полей на всех формах
 * @param array $fields
 * @param $form
 */
function setFieldsAccessFalse(array $fields, &$form)
{
    foreach ($fields as $key => $field) {
        $form[$field]['#access'] = false;
    }
}

/**
 * Отрисовка страницы для Регистраца/Входа в личных кабтнетах
 * @return string
 */
function registerPageRender()
{
    $form_login    = drupal_get_form("user_login");
    $form_register = drupal_get_form("user_register_form");

    return theme('retailer_page', array(
            'form_register' => $form_register,
            'form_login'    => $form_login,
        )
    );
}
